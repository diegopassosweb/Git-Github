Comandos:

touch index.html - cria um arquivo html

git init = inicializa um novo repositorio

git status = verifica o status atual dos repositorios git

git add "index.html" = adiciona alteração no diretório ativo
git add . = para adicionar todos

git config --global user.email "----------"  
git config --global user.name "----------"

git commit -m "nome do commit" = cria um novo commit com uma mensagem

git push  = envia atualizaçoes para a nuvem na branch atualmente ativa

git reflog = log de alteraçoes

git reset --hard 28fd871  = volta para a versão 28fd871

git branch  =  mostra quais branchs disponiveis
git branch staging  = cria a branch staging

git checkout  staging  = permite mudar para a branch staging

git merge staging = (execute um git pull na branch principal antes) puxa alteraçoes da branch staging para atual master

git pull = tras atualizaçoes do servidor para sua maquina local

touch .gitignore - cria o arquivo para listar arquivos ignorados

git rm "nome.txt" = remove arquivo



1. git pull - da branch principal
2. git branch staging - gerar uma nova branch
3. trabalhar e adicionar novas funcionalidades na nova branch criada.
4. Finalizar o trabalho na branch temporaria
5. git checkout - na branch principal
6. git pull
7. git merge(unir) o codigo da branch temporaria com a branch principal apos testes (estando na principal)
8.git push -  estando na branch principal


